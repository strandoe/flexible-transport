version: 2.1

aliases:
- &node-build-container
  working_directory: ~/project
  docker:
  - image: circleci/node:8.12.0
    environment:
      TERM: dumb
- &google-sdk-container
  docker:
  - image: google/cloud-sdk:225.0.0-alpine
    environment:
      TERM: dumb

- &restore-node-modules
  restore_cache:
    keys:
      - node-modules-cache-{{ .Environment.CACHE_VERSION }}-{{ checksum "server/package.json" }}-{{ checksum "package.json" }}
      - node-modules-cache-{{ .Environment.CACHE_VERSION }}-{{ checksum "server/package.json" }}
      - node-modules-cache-{{ .Environment.CACHE_VERSION }}
- &save-node-modules
  save_cache:
    key: node-modules-cache-{{ .Environment.CACHE_VERSION }}-{{ checksum "server/package.json" }}-{{ checksum "package.json" }}
    paths:
      - ./node_modules
      - ./server/node_modules

- &npm-install
  run:
    name: npm install
    command: npm install

- &next-image-tag
  run:
    name: docker image name
    command: |
      imageName="eu.gcr.io/$CLOUDSDK_CORE_PROJECT/$CIRCLE_PROJECT_REPONAME"
      lastImage=$(gcloud container images list-tags $imageName --filter="tags:$CIRCLE_BRANCH-v*" --format='get(tags)' --limit 1)
      nextVersion=$(($(echo $lastImage | grep -o '[0-9]*$')+1))
      imageTag="$CIRCLE_BRANCH-v$nextVersion"
      echo "export VERSION=$nextVersion"  >> $BASH_ENV
      echo "export TAGGED_IMAGE_NAME=$imageName:$imageTag"  >> $BASH_ENV

- &build-app
  run:
    name: build app
    command: GENERATE_SOURCEMAP=true npm run-script build

- &test-app
  run:
    name: test app
    command: CI=true npm run-script test

- &persist-build-workspace
  persist_to_workspace:
    root: ~/
    paths:
      - project
- &attach-build-workspace
  attach_workspace:
    at: ~/

- &gcp-auth
  run:
    name: GCP Authentication
    command: |
      echo $GCLOUD_SERVICE_KEY > ${HOME}/account-auth.json
      gcloud auth activate-service-account --key-file ${HOME}/account-auth.json
      gcloud --quiet container clusters get-credentials $CLOUDSDK_CONTAINER_CLUSTER

- &docker-build
  run:
    name: Docker image build
    command: docker build -t $TAGGED_IMAGE_NAME .
- &docker-push
  run:
    name: Docker push
    command: |
      mkdir -p ~/circleci/.docker && echo -e "{"auths" : { "https://eu.gcr.io" : {} }}" > ~/circleci/.docker/config.json
      docker login -u _json_key --password-stdin https://eu.gcr.io < ${HOME}/account-auth.json
      docker push $TAGGED_IMAGE_NAME
- &git-tag
  run:
    name: Git tag
    command: |
      tag=v${VERSION}
      git tag ${tag}
      git push origin ${tag}

jobs:
  app-build:
    <<: *node-build-container
    steps:
    - checkout

    - *restore-node-modules
    - *npm-install
    - *save-node-modules

    - *build-app
    - *test-app

    - *persist-build-workspace

  docker-image-git-tag:
    <<: *google-sdk-container
    steps:
    - *attach-build-workspace
    - *gcp-auth
    - *next-image-tag
    - *docker-build
    - *docker-push
    - *git-tag

workflows:
  version: 2
  main:
    jobs:
    - app-build
    - docker-image-git-tag:
        context: org-carbon
        requires:
        - app-build